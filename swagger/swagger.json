{
  "swagger" : "2.0",
  "info" : {
    "description" : "#API for CSE\n",
    "version" : "0.0.1",
    "title" : "API Specfication For Container Service Extension on VCD(CSE)"
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/cluster" : {
      "get" : {
        "summary" : "get a list of all clusters",
        "description" : "get a list of all clusters",
        "operationId" : "listClusters",
        "parameters" : [ {
          "name" : "x-vcloud-authorization",
          "in" : "header",
          "description" : "vcloud authorization",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "version in this 'application/*+xml;version=' way",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response with the list of clusters",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Cluster"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      },
      "post" : {
        "summary" : "creates a cluster",
        "description" : "creates a cluster",
        "operationId" : "createCluster",
        "parameters" : [ {
          "name" : "x-vcloud-authorization",
          "in" : "header",
          "description" : "vcloud authorization",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "version in this 'application/*+xml;version=' way",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "in" : "body",
          "name" : "clusterConfig",
          "description" : "the config of the cluster to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/clusterConfig"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "create cluster task has been accepted",
            "schema" : {
              "$ref" : "#/definitions/clusterReturn"
            }
          },
          "409" : {
            "description" : "The provided cluster name already exists",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      }
    },
    "/cluster/{clusterid}" : {
      "delete" : {
        "summary" : "deletes a cluster",
        "description" : "deletes a cluster with a given Id",
        "operationId" : "deleteCluster",
        "parameters" : [ {
          "name" : "x-vcloud-authorization",
          "in" : "header",
          "description" : "vcloud authorization",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "version in this 'application/*+xml;version=' way",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "clusterid",
          "in" : "path",
          "description" : "cluster's Id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "delete cluster task has been accepted",
            "schema" : {
              "$ref" : "#/definitions/deleteReturn"
            }
          },
          "404" : {
            "description" : "The cluster was not found",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      }
    },
    "/cluster/swagger.json" : {
      "get" : {
        "summary" : "get swagger file in json format from api",
        "description" : "gets swagger file in json format to make api calls",
        "operationId" : "getSwaggerJSON",
        "parameters" : [ {
          "name" : "x-vcloud-authorization",
          "in" : "header",
          "description" : "vcloud authorization",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "version in this 'application/*+xml;version=' way",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        } ],
        "responses" : {
          "202" : {
            "description" : "swagger file call succeeded",
            "schema" : {
              "type" : "file"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      }
    },
    "/cluster/swagger.yaml" : {
      "get" : {
        "summary" : "get swagger file in yaml format from api url",
        "description" : "gets swagger file in yaml format from api",
        "operationId" : "getSwaggerYAML",
        "parameters" : [ {
          "name" : "x-vcloud-authorization",
          "in" : "header",
          "description" : "vcloud authorization",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "version in this 'application/*+xml;version=' way",
          "required" : true,
          "type" : "string",
          "minLength" : 1
        } ],
        "responses" : {
          "202" : {
            "description" : "swagger file call succeeded",
            "schema" : {
              "type" : "file"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      }
    },
    "/tasks" : {
      "get" : {
        "summary" : "get a list of task IDs",
        "description" : "get a list of task IDs from KOV",
        "operationId" : "listTaskIDs",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "200 response with the list of taskIDs",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "error" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The error code"
        },
        "message" : {
          "type" : "string",
          "description" : "The error message"
        },
        "helpUrl" : {
          "type" : "string",
          "format" : "uri",
          "description" : "link to help page explaining the error in more detail"
        },
        "cause" : {
          "$ref" : "#/definitions/error"
        }
      },
      "description" : "the default error model for all the error responses coming from the VCD\n"
    },
    "node" : {
      "type" : "object",
      "required" : [ "cluster_id", "cluster_name", "href", "ip", "name", "node_id", "node_type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "the node name, should be valid for use in dns names"
        },
        "node_type" : {
          "type" : "string",
          "description" : "the type of node ie. master or minion",
          "minLength" : 1
        },
        "node_id" : {
          "type" : "string",
          "description" : "node Id"
        },
        "href" : {
          "type" : "string",
          "description" : "href"
        },
        "ip" : {
          "type" : "string",
          "description" : "ip address of node"
        },
        "cluster_id" : {
          "type" : "string",
          "description" : "id of the cluster its associated to"
        },
        "cluster_name" : {
          "type" : "string",
          "description" : "name of cluster it is associated to"
        }
      }
    },
    "Cluster" : {
      "type" : "object",
      "required" : [ "cluster_id", "leader_endpoint", "master_nodes", "name", "nodes", "status" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "the cluster name, should be valid for use in dns names"
        },
        "cluster_id" : {
          "type" : "string",
          "description" : "id of the cluster"
        },
        "master_nodes" : {
          "type" : "array",
          "description" : "array of master nodes",
          "items" : {
            "$ref" : "#/definitions/node"
          }
        },
        "nodes" : {
          "type" : "array",
          "description" : "array of normal nodes",
          "items" : {
            "$ref" : "#/definitions/node"
          }
        },
        "status" : {
          "$ref" : "#/definitions/clusterStatus"
        },
        "leader_endpoint" : {
          "type" : "string"
        }
      }
    },
    "clusterStatus" : {
      "type" : "string",
      "description" : "the status of the cluster",
      "enum" : [ "active", "inactive", "error" ]
    },
    "clusterConfig" : {
      "type" : "object",
      "required" : [ "name", "network", "node_count", "vdc" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "the cluster name, should be valid for use in dns names",
          "minLength" : 3,
          "maxLength" : 63
        },
        "node_count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "the amount of nodes will be created",
          "minimum" : 1
        },
        "cluster_id" : {
          "type" : "string",
          "description" : "id of the cluster"
        },
        "vdc" : {
          "type" : "string",
          "description" : "Virtual Data Center",
          "minLength" : 1
        },
        "network" : {
          "type" : "string",
          "description" : "Name of network"
        }
      },
      "description" : "data needed to make cluster"
    },
    "clusterReturn" : {
      "type" : "object",
      "required" : [ "cluster_id", "name", "status", "task_id" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "the cluster name, should be valid for use in dns names",
          "minLength" : 3,
          "maxLength" : 63
        },
        "cluster_id" : {
          "type" : "string",
          "description" : "id of the cluster"
        },
        "status" : {
          "type" : "string",
          "description" : "status of cluster"
        },
        "task_id" : {
          "type" : "string"
        }
      },
      "description" : "return for creating a cluster"
    },
    "deleteReturn" : {
      "type" : "object",
      "required" : [ "cluster_id", "name", "status", "task_id" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "clustername"
        },
        "cluster_id" : {
          "type" : "string",
          "description" : "cluster id"
        },
        "task_id" : {
          "type" : "string",
          "description" : "the task id of the destroy cluster call"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the call"
        }
      },
      "description" : "result returned when deleting cluster"
    },
    "taskId" : {
      "type" : "string"
    }
  },
  "parameters" : {
    "authorization" : {
      "name" : "x-vcloud-authorization",
      "in" : "header",
      "description" : "vcloud authorization",
      "required" : true,
      "type" : "string",
      "minLength" : 1
    },
    "accept" : {
      "name" : "Accept",
      "in" : "header",
      "description" : "version in this 'application/*+xml;version=' way",
      "required" : true,
      "type" : "string",
      "minLength" : 1
    }
  },
  "responses" : {
    "errorClusterNameConflict" : {
      "description" : "The provided cluster name already exists",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorClusterNotFound" : {
      "description" : "The cluster was not found",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorClusterOrUserNotFound" : {
      "description" : "The cluster or user was not found",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorDefault" : {
      "description" : "Error",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorInvalidRequest" : {
      "description" : "The request is not valid",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorMultipleClustersFound" : {
      "description" : "Multiple clusters found with same name",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorTaskNotFound" : {
      "description" : "The task was not found",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    },
    "errorUserExists" : {
      "description" : "The user with that username already exists",
      "schema" : {
        "$ref" : "#/definitions/error"
      }
    }
  }
}