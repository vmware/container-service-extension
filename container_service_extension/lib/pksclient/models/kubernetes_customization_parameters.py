# coding: utf-8

"""
    PKS

    PKS API  # noqa: E501

    OpenAPI spec version: 1.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class KubernetesCustomizationParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'vsphere_cloud_provider_config_key': 'str',
        'unset_http_proxy': 'list[str]',
        'insecure_registries': 'list[str]'
    }

    attribute_map = {
        'vsphere_cloud_provider_config_key': 'vsphere_cloud_provider_config_key',
        'unset_http_proxy': 'unset_http_proxy',
        'insecure_registries': 'insecure_registries'
    }

    def __init__(self, vsphere_cloud_provider_config_key=None, unset_http_proxy=None, insecure_registries=None):  # noqa: E501
        """KubernetesCustomizationParameters - a model defined in Swagger"""  # noqa: E501

        self._vsphere_cloud_provider_config_key = None
        self._unset_http_proxy = None
        self._insecure_registries = None
        self.discriminator = None

        if vsphere_cloud_provider_config_key is not None:
            self.vsphere_cloud_provider_config_key = vsphere_cloud_provider_config_key
        if unset_http_proxy is not None:
            self.unset_http_proxy = unset_http_proxy
        if insecure_registries is not None:
            self.insecure_registries = insecure_registries

    @property
    def vsphere_cloud_provider_config_key(self):
        """Gets the vsphere_cloud_provider_config_key of this KubernetesCustomizationParameters.  # noqa: E501


        :return: The vsphere_cloud_provider_config_key of this KubernetesCustomizationParameters.  # noqa: E501
        :rtype: str
        """
        return self._vsphere_cloud_provider_config_key

    @vsphere_cloud_provider_config_key.setter
    def vsphere_cloud_provider_config_key(self, vsphere_cloud_provider_config_key):
        """Sets the vsphere_cloud_provider_config_key of this KubernetesCustomizationParameters.


        :param vsphere_cloud_provider_config_key: The vsphere_cloud_provider_config_key of this KubernetesCustomizationParameters.  # noqa: E501
        :type: str
        """
        if vsphere_cloud_provider_config_key is not None and not re.search(r'^[a-zA-Z0-9]+$', vsphere_cloud_provider_config_key):  # noqa: E501
            raise ValueError(r"Invalid value for `vsphere_cloud_provider_config_key`, must be a follow pattern or equal to `/^[a-zA-Z0-9]+$/`")  # noqa: E501

        self._vsphere_cloud_provider_config_key = vsphere_cloud_provider_config_key

    @property
    def unset_http_proxy(self):
        """Gets the unset_http_proxy of this KubernetesCustomizationParameters.  # noqa: E501


        :return: The unset_http_proxy of this KubernetesCustomizationParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._unset_http_proxy

    @unset_http_proxy.setter
    def unset_http_proxy(self, unset_http_proxy):
        """Sets the unset_http_proxy of this KubernetesCustomizationParameters.


        :param unset_http_proxy: The unset_http_proxy of this KubernetesCustomizationParameters.  # noqa: E501
        :type: list[str]
        """

        self._unset_http_proxy = unset_http_proxy

    @property
    def insecure_registries(self):
        """Gets the insecure_registries of this KubernetesCustomizationParameters.  # noqa: E501


        :return: The insecure_registries of this KubernetesCustomizationParameters.  # noqa: E501
        :rtype: list[str]
        """
        return self._insecure_registries

    @insecure_registries.setter
    def insecure_registries(self, insecure_registries):
        """Sets the insecure_registries of this KubernetesCustomizationParameters.


        :param insecure_registries: The insecure_registries of this KubernetesCustomizationParameters.  # noqa: E501
        :type: list[str]
        """

        self._insecure_registries = insecure_registries

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(KubernetesCustomizationParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, KubernetesCustomizationParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
